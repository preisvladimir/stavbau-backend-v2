spring:
  application:
    name: stavbau-backend
  datasource:
    url: jdbc:postgresql://localhost:5432/stavbau
    username: stavbau
    password: stavbau
    hikari:
      connectionInitSql: "SET search_path TO public"
  jpa:
    hibernate:
      ddl-auto: validate
    properties:
      hibernate.default_schema: public
      hibernate:
        format_sql: true
        jdbc:
          lob:
            non_contextual_creation: true
  flyway:
    enabled: true
    locations: classpath:db/migration
    schemas: public
    clean-disabled: true  # jen dočasně na reset
  mvc:
    problemdetails:
      enabled: true
  mail:
    host: ${SMTP_HOST:localhost}
    port: ${SMTP_PORT:1025}       # MailHog v localu / 587 prod
    username: ${SMTP_USERNAME:}
    password: ${SMTP_PASSWORD:}
    properties:
      mail.smtp.auth: ${SMTP_AUTH:false}
      mail.smtp.starttls.enable: ${SMTP_STARTTLS:false}
      mail.smtp.connectiontimeout: 5000
      mail.smtp.timeout: 5000
      mail.smtp.writetimeout: 5000
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      # password: ${REDIS_PASSWORD:}     # pokud je potřeba
      # ssl: true                        # pokud je potřeba
      # sentinel/cluster lze přidat zde


server:
  port: 8080
  error:
    include-message: always
    include-stacktrace: always

app:
  security:
    cookies:
      secure: false
    bcrypt-cost: 12
    jwt:
      issuer: "stavbau"
      accessTokenTtlMinutes: 30
      refreshTokenTtlDays: 14
      secret: "hkCeFiMnK/WnZlQn9JvxguLMB7LEBXxM05E86Gg2Eirg0CWmrKvH1dG0lfcTBwwECiIyw1/Cc4Mgk0qLA6rlpg=="
      rbacClaimsEnabled: true
    rbac:
      claims:
        enabled: false  # default = stabilní login bez RBAC claimů

# <<< PŘESUNUTO DO DEFAULTU
mapycz:
  base-url: "https://api.mapy.com"
  api-key: "ZD4dB8zouM7Zn727KU6u_iTM2pOk31djjAnlqsq3jiQ"  # "${MAPYCZ_API_KEY}"  klíč držíme v ENV / CI secrets
  timeout-ms: 2500

meteostat:
  enabled: true
  base-url: "https://meteostat.p.rapidapi.com"
  sessions-url: "${meteostat.base-url}"   # ← tohle vyžaduje @Value v configu
  rapidapi:
    host: "meteostat.p.rapidapi.com"
    key:  "440c5b540cmsh1379b04a05dc3eap1fde53jsn01f3e9c63e1e"   # nastav v ENV / docker secrets, NEcommitovat!
  timeout-ms: 5000

---
spring:
  config:
    activate:
      on-profile: dev

logging:
  level:
    root: INFO
    org.springframework.security: INFO
    cz.stavbau: DEBUG
    org.hibernate.SQL: DEBUG
    org.springframework.web.filter.CommonsRequestLoggingFilter: DEBUG

files:
  storage:
    type: local
    local:
      base-path: /mnt/data/stavbau-data/files
  upload:
    max-size-mb: 25
    allowed-mime:
      - application/pdf
      - image/png
      - image/jpeg
      - text/plain

registrations:
  enabled: true
  publicBaseUrl: http://localhost:5173
  createCompanyUpfront: false
  token:
    ttl: PT24H
    secretRef: REG_TOKEN_SECRET
  case:
    ttl: P7D
  resend:
    cooldown: PT5M
  ratelimit:
    backend: postgres   # <-- přepínač /redis/
    start:
      perIpPerHour: 5
      perEmailPerDay: 3
    resend:
      perEmailPerHour: 3
  captcha:
    provider: mock
    minScore: 0.5
    siteKeyRef: REG_RECAPTCHA_SITE_KEY
    secretKeyRef: REG_RECAPTCHA_SECRET_KEY
    enforceOnResend: false
  locales:
    allowed: [ "cs-CZ", "en-US" ]
  mail:
    provider: mock
    from: "STAVBAU <noreply@stavbau.cz>"
    templatePrefix: "mail/registration/"
    verifySubjectKey: "mail.registration.verify.subject"
    welcomeSubjectKey: "mail.registration.welcome.subject"
  ares:
    enabled: true
    timeoutMs: 3000
  jobs:
    expire:
      enabled: true
      cron: "0 */10 * * * *"
      batchSize: 500

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  metrics:
    tags:
      application: stavbau-be